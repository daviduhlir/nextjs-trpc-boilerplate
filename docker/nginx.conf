user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  client_max_body_size 20M;

  # Gzip compression
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_types text/plain text/css text/xml text/javascript
             application/x-javascript application/xml+rss
             application/json application/javascript;

  # Upstream to Next.js server
  upstream nextjs_backend {
    server localhost:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
  }

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # Health check endpoint
    location /api/health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }

    # Serve static files directly from .next/static
    location ~* ^/_next/static {
      alias /app/.next/static;
      access_log off;
      expires 365d;
      add_header Cache-Control "public, immutable";
    }

    # Serve public files directly
    location ~* ^/(?!api|_next) {
      root /app/public;
      try_files $uri @nextjs;
      expires 1d;
      add_header Cache-Control "public";
    }

    # Proxy all other requests to Next.js server
    location @nextjs {
      proxy_pass http://nextjs_backend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
    }

    # API routes proxy
    location /api {
      proxy_pass http://nextjs_backend;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
    }

    # Deny access to internal files
    location ~ /\. {
      deny all;
      access_log off;
      log_not_found off;
    }

    location ~ ~$ {
      deny all;
      access_log off;
      log_not_found off;
    }
  }
}
